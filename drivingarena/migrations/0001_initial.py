# Generated by Django 3.2.3 on 2021-07-25 04:44

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_SchoolAdmin', models.BooleanField(default=False)),
                ('is_Trainer', models.BooleanField(default=False)),
                ('is_Trainee', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('email', models.EmailField(max_length=45)),
                ('yourQuery', models.TextField()),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=45)),
                ('feedback_text', models.CharField(max_length=45)),
                ('rating', models.IntegerField()),
                ('date', models.DateField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='ridedetail',
            fields=[
                ('ride_id', models.AutoField(primary_key=True, serialize=False)),
                ('trainee', models.IntegerField()),
                ('getdate', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('from_to', models.CharField(max_length=50)),
                ('timeduration', models.CharField(max_length=20)),
                ('traineeperformance', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDetails',
            fields=[
                ('school_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('owner_name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=45)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=10)),
                ('email', models.CharField(max_length=100, null=True)),
                ('about', models.TextField()),
                ('opening_days', models.CharField(max_length=20)),
                ('time', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tips',
            fields=[
                ('tipsid', models.AutoField(primary_key=True, serialize=False)),
                ('tipstext', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=15)),
                ('postdate', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='TrainerAssignment',
            fields=[
                ('Assign_id', models.AutoField(primary_key=True, serialize=False)),
                ('trainer_id', models.IntegerField()),
                ('trainee_id', models.IntegerField()),
                ('Date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolAdmin',
            fields=[
                ('schooladminid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='drivingarena.customuser')),
                ('city', models.CharField(max_length=20)),
                ('phone', models.IntegerField()),
                ('address', models.TextField(max_length=40)),
                ('gender', models.CharField(max_length=6)),
                ('experience', models.CharField(max_length=30)),
                ('photo', models.ImageField(null=True, upload_to='drivingarena/schooladminpic')),
            ],
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('trainee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='drivingarena.customuser')),
                ('first_name', models.CharField(default='', max_length=10)),
                ('last_name', models.CharField(default='', max_length=10)),
                ('City', models.CharField(max_length=100)),
                ('Address', models.TextField()),
                ('Phone', models.CharField(max_length=10)),
                ('Gender', models.CharField(max_length=6)),
                ('DateOfAdmission', models.DateField()),
                ('Admissionmode', models.CharField(max_length=10)),
                ('Transactionnumber', models.CharField(max_length=100)),
                ('Fees', models.CharField(max_length=10)),
                ('Status', models.CharField(max_length=15)),
                ('trainer_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('trainer_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='drivingarena.customuser')),
                ('phone', models.CharField(max_length=10)),
                ('address', models.TextField(max_length=30)),
                ('city', models.CharField(max_length=20)),
                ('gender', models.CharField(max_length=10)),
                ('dateofjoin', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('experience', models.CharField(max_length=50)),
                ('photo', models.FileField(null=True, upload_to='drivingarena/trainerpic')),
            ],
        ),
    ]
